#数据库配置

db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://localhost:3306/templateproject?useUnicode=true&amp;characterEncoding=gbk
db.username=root
db.password=root

#hibernate dialect
# 可用的dialects
# mysql: org.hibernate.dialect.MySQLDialect
# sqlserver: org.hibernate.dialect.SQLServerDialect
# oracle: org.hibernate.dialect.Oracle10gDialect, org.hibernate.dialect.Oracle9iDialec, org.hibernate.dialect.OracleDialect
# sybase: org.hibernate.dialect.SybaseAnywhereDialect, org.hibernate.dialect.SybaseDialect

hibernate.dialect=org.hibernate.dialect.MySQLDialect

usepara=true

#基本配置

#应用名称
app.name=templateproject
#java源代码目录
src.dir=src
#单元测试代码目录
test.dir=test
#web目录
web.dir=WebContent
#导出目录
export_dir=.
#配置文件目录
conf.dir=conf
#构建目录
build.dir=build
#测试数据文件
test.data.file=${conf.dir}/test-data.xml
test.src.dir=test

i18n.src.dir=${conf.dir}/i18n
i18n.src.encoding=GBK
i18n.dst.dir=${src.dir}/resource/

#系统配置

#是否覆盖hibernate配置文件
override_conf=true
#spring事务管理类
spring.transactionManager=org.springframework.orm.hibernate3.HibernateTransactionManager

#代码生成配置

#项目包名
package.base=demopackage.${app.name}
#model包
package.model=${package.base}.model
#dao包
package.dao=${package.base}.dao
#业务类包
package.service=${package.base}.service

#生成项目配置

# 生成代码时包含的模型（不区分大小写，逗号分隔，空表示全部）
include_models=

# 生成代码时排除的模型（不区分大小写，逗号分隔，空表示不排除）
exclude_models=

#jdk5
hss_jdk5=true

#merge_dao
merge_dao=true

#是否覆盖存在文件
hss_overwrite_exists=false

#文件存在又不覆盖时是否生成另一个文件
hss_create_another_file=true

#生成的另一个文件的后缀是什么
hss_another_fileext=.__new__

#是否生成IRootDAO接口
hss_export_rootdao_interface=true
#是否生成BaseDAO接口
hss_export_basedao_interface=true
#是否生成DAO接口
hss_export_dao_interface=true
#是否生成RootDAO
hss_export_rootdao=true
#是否生成BaseDAO
hss_export_basedao=true
#是否生成DAO
hss_export_dao=true
#是否生成业务类基类接口
hss_export_rootservice_interface=true
#是否生成Base业务类接口
hss_export_baseservice_interface=true
#是否生成业务类接口
hss_export_service_interface=true
#是否生成业务类基类
hss_export_rootservice=true
#是否生成Base业务类
hss_export_baseservice=true
#是否生成业务类
hss_export_service=true
#是否生成dao配置
hss_export_dao_context=true
#是否生成业务配置
hss_export_service_context=true
#是否生成范例文件
hss_export_demo=true
#是否生成测试基类
hss_export_base_testcase=true

#其它模板(模板与目标文件之间使用”:“分隔，多个模板之间使用”,“分隔”{class-name}“为Model的名称，
#目标文件名中可以使用$[]引用build.xml中gencode里定义的属性(小数点自动转换为/)，如$[hss_src_dir]
#范例: tpl/Some.ftl:src/Some.xml,tpl/NestAction.ftl:$[hss_src_dir]/$[hss_base_package]/webapp/action/{class-name}Action.java)
hss_extra_template=\
tpl/ICachableBaseManager.java.ftl:$[hss_src_dir]/$[hss_service_package]/ICachableBaseManager.java,\
tpl/CachableBaseManager.java.ftl:$[hss_src_dir]/$[hss_service_package]/impl/CachableBaseManager.java,\
tpl/AbstractDictManager.java.ftl:$[hss_src_dir]/$[hss_service_package]/impl/AbstractDictManager.java,\
tpl/BaseAction.java.ftl:$[hss_src_dir]/$[hss_base_package]/webapp/action/BaseAction.java,\
tpl/PageAction.java.ftl:$[hss_src_dir]/$[hss_base_package]/webapp/action/PageAction.java,\
tpl/SessionlogoutHandlerImpl.java.ftl:$[hss_src_dir]/$[hss_base_package]/webapp/util/SessionlogoutHandlerImpl.java,\
tpl/UserAuthenticationProcessingFilter.java.ftl:$[hss_src_dir]/$[hss_base_package]/webapp/util/UserAuthenticationProcessingFilter.java,\
tpl/normal-security.xml.ftl:$[hss_web_dir]/WEB-INF/normal-security.xml.rename_to_dot_xml,\
tpl/JdbcRootManager.java.ftl:$[hss_src_dir]/$[hss_service_package]/ext/impl/JdbcRootManager.java